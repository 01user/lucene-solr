/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'base'

configurations {
  startJar
  libExt
  lib {
    exclude group: "org.slf4j"
  }
}

dependencies {
  startJar('org.eclipse.jetty:jetty-start::shaded', {
    transitive false
  })

  libExt 'com.lmax:disruptor'
  libExt 'org.slf4j:jcl-over-slf4j'
  libExt 'org.slf4j:jul-to-slf4j'
  libExt 'org.slf4j:slf4j-api'
  libExt 'org.apache.logging.log4j:log4j-1.2-api'
  libExt 'org.apache.logging.log4j:log4j-api'
  libExt 'org.apache.logging.log4j:log4j-core'
  libExt 'org.apache.logging.log4j:log4j-slf4j-impl'
  libExt 'org.apache.logging.log4j:log4j-web'

  lib('org.eclipse.jetty:jetty-alpn-java-server', {
    exclude group: "org.eclipse.jetty.alpn", module: "alpn-api"
  })

  lib 'io.dropwizard.metrics:metrics-core'
  lib('io.dropwizard.metrics:metrics-graphite', {
    exclude group: "com.rabbitmq", module: "amqp-client"
  })
  lib 'io.dropwizard.metrics:metrics-jetty9'
  lib 'io.dropwizard.metrics:metrics-jvm'
  lib 'io.dropwizard.metrics:metrics-jmx'
  
  lib 'org.eclipse.jetty:jetty-continuation'
  lib 'org.eclipse.jetty:jetty-deploy'
  lib 'org.eclipse.jetty:jetty-http'
  lib 'org.eclipse.jetty:jetty-io'
  lib 'org.eclipse.jetty:jetty-jmx'
  lib 'org.eclipse.jetty:jetty-rewrite'
  lib 'org.eclipse.jetty:jetty-security'
  lib 'org.eclipse.jetty:jetty-server'
  lib 'org.eclipse.jetty:jetty-servlet'
  lib 'org.eclipse.jetty:jetty-servlets'
  lib 'org.eclipse.jetty:jetty-util'
  lib 'org.eclipse.jetty:jetty-webapp'
  lib 'org.eclipse.jetty:jetty-xml'
  lib 'org.eclipse.jetty:jetty-alpn-server'

  lib 'org.eclipse.jetty.http2:http2-server'
  lib 'org.eclipse.jetty.http2:http2-common'
  lib 'org.eclipse.jetty.http2:http2-hpack'
  
  lib 'javax.servlet:javax.servlet-api'
}

task collectDependencies(type: Sync) {
  from { project.configurations.startJar.singleFile } {
    rename { file -> 'start.jar' }\
  }

  from(project.configurations.lib, {
    into 'lib/'
  })

  from(project.configurations.libExt, {
    into 'lib/ext/'
  })

  from(projectDir, {
    include "contexts/**"
    include "etc/**"
    include "modules/**"
    include "resources/**"
    include "scripts/**"
    include "solr/**"
    include "README.txt"
  })

  into "$buildDir/assembled"
}

// TODO: remove this. Keep project sources separate from preassembled locations.
task copyIntoProjectSources(type: Copy) {
  dependsOn collectDependencies

  from "$buildDir/assembled"
  into projectDir
}

assemble.dependsOn collectDependencies, copyIntoProjectSources
